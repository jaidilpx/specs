swagger: '2.0'
info:
  title: Open Storage for Containers
  description: Open storage API specification
  version: 1.0.0
host: localhost
schemes:
  - https
produces:
  - application/json
paths:
  /cluster/versions/:
    get:
      summary: List of versions
      tags:
        - Clusters
      responses:
        '200':
          description: An array of version strings
          schema:
            type: array
            items:
              type: string
  /v1/cluster/enumerate/:
    get:
      summary: Retrieve cluster information
      description: |
        Returns information on the cluster
      tags:
        - Clusters
      responses:
        '200':
          description: The cluster details
          schema:
            $ref: '#/definitions/Cluster'
  /v1/cluster/gossipstate/:
    get:
      summary: Retrieve cluster gossipstate
      description: |
        Returns information on the clusters gossip state
      tags:
        - Clusters
      responses:
        '200':
          description: Cluster state
          schema:
            $ref: '#/definitions/ClusterState'
  /v1/cluster/status/:
    get:
      summary: Retrieve cluster status
      description: |
        Returns information on the cluster status
      parameters:
        - name: name
          in: query
          required: true
          type: string
      tags:
        - Clusters
      responses:
        '200':
          description: Cluster status
          schema:
            $ref: '#/definitions/ClusterState'
  /v1/cluster/peerstatus/:
    get:
      summary: Retrieve peer node information
      description: |
        Returns information on the peer node status
      parameters:
        - name: name
          in: query
          required: true
          type: string
      tags:
        - Clusters
      responses:
        '200':
          description: Peer node status
          schema:
            $ref: '#/definitions/ClusterState'
  /v1/cluster/inspect/{uuid}/:
    get:
      summary: Retrieve cluster node stats
      description: |
        Returns stats for the specified node
      parameters:
        - name: uuid
          in: path
          description: Node UUID
          required: true
          type: string
          format: uuid
      tags:
        - Clusters
      responses:
        '200':
          description: Stats
          schema:
            type: array
            items:
              $ref: '#/definitions/StatPoint'
  /v1/cluster/{uuid}/:
    delete:
      summary: Delete node
      description: |
        Removes a node from the cluster
      parameters:
        - name: uuid
          in: path
          description: Node UUID
          required: true
          type: string
          format: uuid
      responses:
        '202':
          description: Accepted
      tags:
        - Clusters
  /v1/cluster/:
    delete:
      summary: Delete cluster
      responses:
        '202':
          description: Accepted
      tags:
        - Clusters
  /v1/cluster/enablegossip/:
    put:
      summary: Enables gossip
      responses:
        '202':
          description: Accepted
      tags:
        - Clusters
  /v1/cluster/disablegossip/:
    put:
      summary: Disables gossip
      responses:
        '202':
          description: Accepted
      tags:
        - Clusters
  /v1/cluster/shutdown/{uuid}/:
    put:
      summary: Shutdown node
      description: |
        Removes a node from the cluster
      parameters:
        - name: uuid
          in: path
          description: Node UUID
          required: true
          type: string
          format: uuid
      responses:
        '202':
          description: Accepted
      tags:
        - Clusters
  /v1/cluster/shutdown/:
    put:
      summary: Shutdown cluster
      responses:
        '202':
          description: Accepted
      tags:
        - Clusters
  /osd-volumes/versions/:
    get:
      summary: List of versions
      tags:
        - Volumes
      responses:
        '200':
          description: An array of version strings
          schema:
            type: array
            items:
              type: string
  /v1/osd-volumes/:
    get:
      summary: List of Volumes
      description: |
        Returns information on provisioned volumes
      parameters:
        - name: Name
          in: query
          description: User specified volume name
          required: false
          type: string
        - name: Label
          in: query
          description: Comma separated name value pairs
          required: false
          type: string
        - name: ConfigLabel
          in: query
          description: Comma separated name value pairs
          required: false
          type: string
        - name: VolumeID
          in: query
          description: Volume uuid
          required: false
          type: string
          format: uuid
      tags:
        - Volumes
      responses:
        '200':
          description: An array of Volumes
          schema:
            type: array
            items:
              $ref: '#/definitions/Volume'
    post:
      summary: Create New Volume
      description: Create new volume according to spec
      parameters:
        - name: spec
          in: body
          description: Volume spec
          required: true
          schema:
            $ref: '#/definitions/VolumeCreateRequest'
      tags:
        - Volumes
      responses:
        '200':
          description: UUID of neewly created volume
          schema:
            $ref: '#/definitions/VolumeCreateResponse'
  /v1/osd-volumes/{uuid}/:
    get:
      summary: Inspect volume
      description: |
        Retrieves volume as specified by UUID
      parameters:
        - name: uuid
          in: path
          description: Volume UUID
          required: true
          type: string
          format: uuid
      tags:
        - Volumes
      responses:
        '200':
          description: Volume
          schema:
            $ref: '#/definitions/Volume'
    put:
      summary: Change volume state
      description: |
        Attach, detach, format, mount and unmount operations
      parameters:
        - name: uuid
          in: path
          description: Volume UUID
          required: true
          type: string
          format: uuid
        - name: state
          in: body
          description: Desired Volume State
          required: true
          schema:
            $ref: '#/definitions/VolumeStateParams'
      tags:
        - Volumes
      responses:
        '200':
          description: Volume reflecting current state
          schema:
            $ref: '#/definitions/Volume'
    delete:
      summary: Delete Volume
      description: |
        Delete Volume
      parameters:
        - name: uuid
          in: path
          description: Volume UUID
          required: true
          type: string
          format: uuid
      tags:
        - Volumes
      responses:
        '200':
          description: Volume Deleted
          schema:
            $ref: '#/definitions/UUID'
  /v1/osd-volumes/stats/:
    get:
      summary: Retrieve Volume Stats
      description: |
        Retrieve Volume Stats
      tags:
        - Volumes
      responses:
        '200':
          description: Volume Stats
          schema:
            $ref: '#/definitions/VolumeStats'
  /v1/osd-volumes/stats/{uuid}/:
    get:
      summary: Retrieve Volume Stats
      description: |
        Retrieve Volume Stats for specified UUID
      parameters:
        - name: uuid
          in: path
          description: Volume UUID
          required: true
          type: string
          format: uuid
      tags:
        - Volumes
      responses:
        '200':
          description: Volume stats
          schema:
            $ref: '#/definitions/VolumeStats'
  /v1/osd-volumes/usedsize/:
    get:
      summary: Retrieves volumes used space size
      description: |
        Retrieve Volume Stats
      tags:
        - Volumes
      responses:
        '200':
          description: Volumes used space sizes
          schema:
            type: array
            items:
              type: number
  /v1/osd-volumes/usedsize/{uuid}/:
    get:
      summary: Retrieve volume used disk size
      description: |
        Retrieve volume used space size for specified UUID
      parameters:
        - name: uuid
          in: path
          description: Volume UUID
          required: true
          type: string
          format: uuid
      tags:
        - Volumes
      responses:
        '200':
          description: Volume used space
          schema:
            type: number
  /v1/osd-volumes/alerts/:
    get:
      summary: Retrieve Volume Alerts
      description: |
        Retrieve Volume Alerts
      tags:
        - Volumes
      responses:
        '200':
          description: Volume Alerts
          schema:
            $ref: '#/definitions/VolumeAlerts'
  /v1/osd-volumes/alerts/{uuid}/:
    get:
      summary: Retrieve Volume Alerts
      description: |
        Retrieve Volume Alerts for specified UUID
      parameters:
        - name: uuid
          in: path
          description: Volume UUID
          required: true
          type: string
          format: uuid
      tags:
        - Volumes
      responses:
        '200':
          description: Volume Alerts
          schema:
            $ref: '#/definitions/VolumeAlerts'
  /v1/osd-volumes/requests/:
    get:
      summary: Retrieve Volume Requests
      description: |
        Retrieve Volume Requests
      tags:
        - Volumes
      responses:
        '200':
          description: Volume Requests
          schema:
            $ref: '#/definitions/VolumeActiveRequests'
  /v1/osd-volumes/requests/{uuid}/:
    get:
      summary: Retrieve Volume Requests
      description: |
        Retrieve Volume Requests for specified UUID
      parameters:
        - name: uuid
          in: path
          description: Volume UUID
          required: true
          type: string
          format: uuid
      tags:
        - Volumes
      responses:
        '200':
          description: Volume Requests
          schema:
            $ref: '#/definitions/VolumeActiveRequests'
  /v1/osd-snapshots/:
    get:
      summary: List of snapshots
      description: |
        Returns information on snapshots
      parameters:
        - name: name
          in: query
          description: Volume name that maps to this snap
          required: false
          type: string
        - name: VolumeLabels
          in: query
          description: Comma separated volume labels
          required: false
          type: string
        - name: SnapLabels
          in: query
          description: Comma separated snap labels
          required: false
          type: string
        - name: uuid
          in: query
          description: Snap UUID
          required: false
          type: string
          format: uuid
      tags:
        - Volumes
      responses:
        '200':
          description: An array of VolumeSnaps
          schema:
            type: array
            items:
              $ref: '#/definitions/VolumeSnap'
    post:
      summary: Create New Snapshot
      description: Create new volume according to spec
      parameters:
        - name: snapParams
          in: body
          description: Snapshot Params
          required: true
          schema:
            $ref: '#/definitions/SnapCreateParams'
      tags:
        - Volumes
      responses:
        '200':
          description: UUID of neewly created snapshot
          schema:
            $ref: '#/definitions/UUID'
definitions:
  VolumeResponse:
    properties:
      Error:
        type: string
        description: Error text
  VolumeCreateRequest:
    properties:
      locator:
        $ref: '#/definitions/Locator'
      spec:
        $ref: '#/definitions/VolumeSpec'
      options:
        $ref: '#/definitions/CreateOptions'
  VolumeCreateResponse:
    properties:
      Id:
        type: string
        format: uuuid
      VolumeResponse:
        $ref: '#/definitions/VolumeResponse'
  Volume:
    properties:
      uuid:
        type: string
        format: uuid
        description: unique volume UUID
      locator:
        $ref: '#/definitions/Locator'
      ctime:
        type: string
        description: Creation time
      spec:
        $ref: '#/definitions/VolumeSpec'
      status:
        type: string
        description: Volume op status
        enum:
          - NotPresent
          - Up
          - Down
          - Degraded
      state:
        type: number
        description: >-
          Volume state. 1 -> CreatePending, 2->Available, 4->Attached,
          8->Detached, 16->ErrorState, 32->Deleted
      format:
        type: string
        description: Filesystem for this volume
        enum:
          - xfs
          - ext4
          - zfs
          - none
      usage:
        type: number
        format: int64
        description: Physical blocks used on this volume
      scan_time:
        type: string
        description: Last time this volume was scanned for data integrity
      attached_on:
        type: string
        description: Node on which volume is attached
      replica_set:
        type: array
        items:
          type: string
        description: List of nodes where data is erasure coded
      device_path:
        type: string
        description: Attach path for block devices
      mount_path:
        type: array
        items:
          type: string
        description: Paths at which the volumes is mounted
      error:
        type: string
        description: Last error on this volume
  VolumeSpec:
    properties:
      ephemeral:
        type: boolean
        description: True for ephemeral disks
      size:
        type: number
        format: int64
        description: Maximum size
      blocksize:
        type: number
        format: int32
        description: Desired fs block size
      halevel:
        type: number
        description: >-
          A number specifying the number of nodes that are allowed to fail and
          data be still available
      cos:
        type: number
        minimum: 1
        maximum: 10
        description: A number between 1 and 10 that specified a class of service
      dedupe:
        type: boolean
        description: Enable or disable deduplication
      snapshot_interval:
        type: number
        description: >-
          A number in minutes specifying how oftene snapshots should be taken. 0
          disables snapshots
      snapshot_depth:
        type: number
        description: Number of snapshots to keep
      config_labels:
        type: array
        items:
          $ref: '#/definitions/NameValuePair'
        description: Arbitrary name value configuration pairs
  CreateOptions:
    properties:
      fail_if_exists:
        type: boolean
        description: Fail if volume with matching locator exists
      create_from_snap:
        type: string
        format: uuid
        description: create volume from specified snapshot
  Locator:
    properties:
      name:
        type: string
        description: user assigned name
      labels:
        type: string
        description: comma seperated name value pairs
  VolumeStateParams:
    properties:
      mount:
        type: integer
        format: int32
        description: '1 to mount, 2 to unmount'
      format:
        type: integer
        format: int32
        description: 1 to format
      attach:
        type: integer
        format: int32
        description: '1 to attach, 2 to detach'
      mountpath:
        type: string
        description: Path to mount the device
  UUID:
    properties:
      name:
        type: string
        description: Volume UUID
        format: uuid
  NameValuePair:
    properties:
      name:
        type: string
        description: Name
      value:
        type: string
        description: Value
  VolumeStats:
    properties:
      stats:
        type: array
        items:
          $ref: '#/definitions/NameValuePair'
        description: Stats name and value array
  VolumeAlerts:
    properties:
      stats:
        type: array
        items:
          $ref: '#/definitions/NameValuePair'
        description: Alerts name and description array
  VolumeSnap:
    properties:
      uuid:
        type: string
        format: uuid
        description: Unique snap UUID
      volume_uuid:
        type: string
        format: uuid
        description: Volume UUID that maps to this snapshot
      ctime:
        type: string
        description: Creation time
      usage:
        type: number
        format: int64
        description: Physical blocks used for this snap
      snap_labels:
        type: array
        items:
          $ref: '#/definitions/NameValuePair'
        description: Arbitrary name value pairs
  SnapCreateParams:
    properties:
      uuid:
        type: string
        format: uuid
        description: UUID of volume to snap
      labels:
        type: array
        items:
          $ref: '#/definitions/NameValuePair'
        description: Arbitrary name value pairs
  ActiveRequest:
    properties:
      requestKV:
        type: array
        items:
          $ref: '#/definitions/NameValuePair'
  VolumeActiveRequests:
    properties:
      RequestCount:
        type: number
        format: int64
        description: Number of active requests
      ActiveRequest:
        type: array
        items:
          $ref: '#/definitions/ActiveRequest'
  StoragePool:
    properties:
      ID:
        type: string
        format: uuid
      Cos:
        type: number
        format: int
      Medium:
        type: number
        format: int
      RaidLevel:
        type: string
      TotalSize:
        type: number
        format: uint64
      Used:
        type: number
        format: uint64
  Node:
    properties:
      Id:
        type: string
        format: uuid
      Cpu:
        type: number
        format: float64
      MemTotal:
        type: number
        format: uint64
      MemUsed:
        type: number
        format: uint64
      MemFree:
        type: number
        format: uint64
      AvgLoad:
        type: number
        format: int
      GenNumber:
        type: number
        format: uint64
      Status:
        type: string
        enum:
          - STATUS_NONE
          - STATUS_INIT
          - STATUS_OK
          - STATUS_OFFLINE
          - STATUS_ERROR
          - STATUS_NOT_IN_QUORUM
          - STATUS_DECOMMISSION
          - STATUS_MAINTENANCE
          - STATUS_STORAGE_DOWN
          - STATUS_STORAGE_DEGRADED
          - STATUS_NEEDS_REBOOT
          - STATUS_STORAGE_REBALANCE
          - STATUS_STORAGE_DRIVE_REPLACE
          - STATUS_MAX
      Disks:
        type: array
        items:
          type: string
      Pools:
        type: array
        items:
          $ref: '#/definitions/StoragePool'
      MgmtIp:
        type: string
        format: uuid
      DataIp:
        type: string
        format: uuid
      Timestamp:
        type: string
      StartTime:
        type: string
      Hostname:
        type: string
      NodeData:
        type: array
        items:
          $ref: '#/definitions/NameValuePair'
      NodeLabels:
        type: array
        items:
          $ref: '#/definitions/NameValuePair'
  Cluster:
    properties:
      Id:
        type: string
        format: uuid
      Status:
        type: string
        enum:
          - STATUS_NONE
          - STATUS_INIT
          - STATUS_OK
          - STATUS_OFFLINE
          - STATUS_ERROR
          - STATUS_NOT_IN_QUORUM
          - STATUS_DECOMMISSION
          - STATUS_MAINTENANCE
          - STATUS_STORAGE_DOWN
          - STATUS_STORAGE_DEGRADED
          - STATUS_NEEDS_REBOOT
          - STATUS_STORAGE_REBALANCE
          - STATUS_STORAGE_DRIVE_REPLACE
          - STATUS_MAX
      NodeId:
        type: string
        format: uuid
      Nodes:
        type: array
        items:
          $ref: '#/definitions/Node'
  NodeValue:
    properties:
      Id:
        type: string
        format: uuid
      GenNumber:
        type: number
        format: uint64
      LastUpdateTs:
        type: string
      Status:
        type: string
      Value:
        type: string
  GossipSessionInfo:
    properties:
      Node:
        type: string
      Ts:
        type: string
      Dir:
        type: number
        format: uint8
      Err:
        type: string
      Op:
        type: string
  ClusterState:
    properties:
      History:
        type: array
        items:
          $ref: '#/definitions/GossipSessionInfo'
      NodeStatus:
        type: array
        items:
          $ref: '#/definitions/NodeValue'
  StatPoint:
    properties:
      Name:
        type: string
      Tags:
        type: array
        items:
          $ref: '#/definitions/NameValuePair'
      Fields:
        type: array
        items:
          type: string
      Timestamp:
        type: number
        format: int64
